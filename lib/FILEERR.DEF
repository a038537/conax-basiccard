Rem BasicCard Sample Source Code
Rem ------------------------------------------------------------------
Rem Copyright (C) 1997-1999 ZeitControl GmbH
Rem You have a royalty-free right to use, modify, reproduce and 
Rem distribute the Sample Application Files (and/or any modified 
Rem version) in any way you find useful, provided that you agree 
Rem that ZeitControl GmbH has no warranty, obligations or liability
Rem for any Sample Application Files.
Rem ------------------------------------------------------------------

Rem  FILEERR.DEF
Rem
Rem  File I/O error checking procedure

#IfNotDef FileerrDefIncluded ' Prevent multiple inclusion
Const FileerrDefIncluded = True

#Include FILEIO.DEF
#Include ERRFILE.DEF
#Include COMMERR.DEF

Declare Function FileErrorText$ (errcode@)

Rem  Sub CheckFileError (Err$)
Rem
Rem  Checks FileError. If an error occurred, prints out Err$ followed by
Rem  the name of the FileError code, and exits.

Sub CheckFileError (Err$)

  If FileError = feFileOK Then Exit Sub

  Rem  Print it as e.g.
  Rem
  Rem      File error opening file FOO.IMG for input:
  Rem      FileError = feFileNotFound

  Private Filenum : Filenum = ErrorFilenum()
  Print #Filenum, Err$ + ":"
  Print #Filenum, "FileError = " + FileErrorText$ (FileError)
  If Filenum Then Close Filenum
  Exit

End Sub ' CheckFileError

Function FileErrorText$ (errcode@)
  Select Case errcode@
    Case feFileOK:              FileErrorText$ = "feFileOK"
    Case feInvalidDrive:        FileErrorText$ = "feInvalidDrive"
    Case feBadFilename:         FileErrorText$ = "feBadFilename"
    Case feBadFilenum:          FileErrorText$ = "feBadFilenum"
    Case feFileNotFound:        FileErrorText$ = "feFileNotFound"
    Case feFileNotOpen:         FileErrorText$ = "feFileNotOpen"
    Case feOpenError:           FileErrorText$ = "feOpenError"
    Case feSeekError:           FileErrorText$ = "feSeekError"
    Case feReadError:           FileErrorText$ = "feReadError"
    Case feWriteError:          FileErrorText$ = "feWriteError"
    Case feCloseError:          FileErrorText$ = "feCloseError"
    Case feInvalidMode:         FileErrorText$ = "feInvalidMode"
    Case feInvalidAccess:       FileErrorText$ = "feInvalidAccess"
    Case feRenameError:         FileErrorText$ = "feRenameError"
    Case feAccessDenied:        FileErrorText$ = "feAccessDenied"
    Case feSharingViolation:    FileErrorText$ = "feSharingViolation"
    Case feFileAlreadyExists:   FileErrorText$ = "feFileAlreadyExists"
    Case feNotDataFile:         FileErrorText$ = "feNotDataFile"
    Case feNotDirectory:        FileErrorText$ = "feNotDirectory"
    Case feDirNotEmpty:         FileErrorText$ = "feDirNotEmpty"
    Case feBadFileChain:        FileErrorText$ = "feBadFileChain"
    Case feFileOpen:            FileErrorText$ = "feFileOpen"
    Case feNameTooLong:         FileErrorText$ = "feNameTooLong"
    Case feRecordTooLong:       FileErrorText$ = "feRecordTooLong"
    Case feTooManyOpenFiles:    FileErrorText$ = "feTooManyOpenFiles"
    Case feTooManyCardFiles:    FileErrorText$ = "feTooManyCardFiles"
    Case feCommsError:          FileErrorText$ = "feCommsError"
    Case feRemoteFile:          FileErrorText$ = "feRemoteFile"
    Case feNotRemoteFile:       FileErrorText$ = "feNotRemoteFile"
    Case feRecursiveRename:     FileErrorText$ = "feRecursiveRename"
    Case feInvalidFromKeyboard: FileErrorText$ = "feInvalidFromKeyboard"
    Case feBadParameter:        FileErrorText$ = "feBadParameter"
    Case feOutOfMemory:         FileErrorText$ = "feOutOfMemory"
    Case feNoFileSystem:        FileErrorText$ = "feNoFileSystem"
    Case feUnexpectedError:     FileErrorText$ = "feUnexpectedError"
    Case feNotImplemented:      FileErrorText$ = "feNotImplemented"
    Case feTooManyCustomLocks:  FileErrorText$ = "feTooManyCustomLocks"
    Case feBadKeyFile:          FileErrorText$ = "feBadKeyFile"
    Case feInvalidAlignment:    FileErrorText$ = "feInvalidAlignment"
    Case Else:                  FileErrorText$ = Str$ (errcode@)
  End Select

  If errcode@ = feCommsError Then
    FileErrorText$ = FileErrorText$ + ": SW1-SW2 = " + SWName$()
  End If

End Function ' FileErrorText$

#EndIf ' FileerrDefIncluded
