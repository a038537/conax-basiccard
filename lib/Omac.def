Rem BasicCard Plug-In Library Definition File
Rem ------------------------------------------------------------------
Rem Copyright (C) 1997-2001 ZeitControl GmbH
Rem Do not edit this file. You have a royalty-free right to use, reproduce and 
Rem distribute this file in any way you find useful, provided that you agree 
Rem that ZeitControl GmbH has no warranty, obligations or liability for it.
Rem ------------------------------------------------------------------

Rem  OMAC.DEF
Rem
Rem  Definition file for library OMAC

Rem
Rem  This library implements the Message Authentication Code algorithm OMAC1,
Rem  defined in "OMAC: One-Key CBC MAC" by Tetsu Iwata and Kaoru Kurosawa.
Rem
Rem  Library Procedures
Rem  ------------------
Rem
Rem    Function OMACInit (Type%, Key$) As String
Rem
Rem  Call this to specify the underlying block encryption algorithm and the
Rem  cryptographic key. Type% is 128, 192, or 256, for AES-128, AES-192, or
Rem  AES-256 respectively. The function returns a string that must be passed
Rem  as the OmacState parameter to subsequent calls.
Rem
Rem    Function OMAC (Type%, Key$, Mess$) As String
Rem
Rem  Compute an OMAC1 Tag with a single function call. Returns a 16-byte
Rem  string.
Rem
Rem    Sub OMACStart (OmacState As String)
Rem    Sub OMACAppend (OmacState As String, Key$, Mess$)
Rem    Function OMACEnd (OmacState As String, Key$) As String
Rem
Rem  Compute an OMAC tag incrementally. Call OMACStart() once, then
Rem  OMACAppend (Mess$) for each message block, and finally OMACEnd()
Rem  to compute the OMAC1 Tag.

#IfNotDef OmacDefIncluded ' Prevent multiple inclusion
Const OmacDefIncluded = True

Rem  LibError codes

Const OmacBadType     = &H4A01
Const OmacKeyTooShort = &H4A02
Const OmacBadState    = &H4A03

Rem  Library procedures

Declare Function &HCA 1 OMACInit (ByVal Type%, ReadOnly Key$) As String
Declare Function &HCA 2 OMAC (ByVal Type%, ReadOnly Key$, ReadOnly Mess$) As String
Declare Sub      &HCA 3 OMACStart (OmacState As String)
Declare Sub      &HCA 4 OMACAppend (OmacState As String, ReadOnly Key$, ReadOnly Mess$)
Declare Function &HCA 5 OMACEnd (OmacState As String, ReadOnly Key$) As String

#EndIf ' OmacDefIncluded
