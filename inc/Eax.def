Rem BasicCard Plug-In Library Definition File
Rem ------------------------------------------------------------------
Rem Copyright (C) 1997-2001 ZeitControl GmbH
Rem Do not edit this file. You have a royalty-free right to use, reproduce and 
Rem distribute this file in any way you find useful, provided that you agree 
Rem that ZeitControl GmbH has no warranty, obligations or liability for it.
Rem ------------------------------------------------------------------

Rem  EAX.DEF
Rem
Rem  Definition file for library EAX

Rem
Rem  This library implements the Authenticated Encryption algorithm EAX,
Rem  defined in "EAX: A Conventional Authenticated-Encryption Mode", by
Rem  M. Bellare, P. Rogaway, and D. Wagner.
Rem
Rem  Library Procedures
Rem  ------------------
Rem
Rem    Function EAXInit (Type%, Key$)
Rem
Rem  Call this to specify the underlying block encryption algorithm and the
Rem  cryptographic key. Type% is 128, 192, or 256, for AES-128, AES-192, or
Rem  AES-256 respectively. The function returns a string that must be passed
Rem  as the EaxState parameter to subsequent calls.
Rem
Rem    Sub EAXProvideNonce (EaxState As String, Key$, N$)
Rem
Rem  Call this at the start of an encryption or decryption. The Nonce N$
Rem  is any string of data, which does not have to be secret. To achieve
Rem  proper security, however, it should be different each time.
Rem
Rem    Sub EAXProvideHeader (EaxState As String, Key$, H$)
Rem
Rem  Append H$ to the Header. The Header is that part of the message that
Rem  is not encrypted, but only authenticated.
Rem
Rem    Sub EAXComputeCiphertext (EaxState As String, Key$, M$)
Rem
Rem  Encrypt the string M$ and update the message authentication state.
Rem
Rem    Sub EAXComputePlaintext (EaxState As String, Key$, C$)
Rem
Rem  Decrypt the string C$ and update the message authentication state.
Rem
Rem    Function EAXComputeTag (EaxState As String, Key$) As String
Rem
Rem  Compute the authentication Tag. This function returns a 16-byte string.

#IfNotDef EaxDefIncluded ' Prevent multiple inclusion
Const EaxDefIncluded = True

Rem  LibError codes

Const EaxBadType     = &H4B01
Const EaxKeyTooShort = &H4B02
Const EaxBadState    = &H4B03

Rem  Library procedures

Declare Function &HCB &H01 EAXInit (ByVal Type%, ReadOnly Key$) As String
Declare Sub      &HCB &H02 EAXProvideNonce (EaxState As String, ReadOnly Key$, ReadOnly N$)
Declare Sub      &HCB &H03 EAXProvideHeader (EaxState As String, ReadOnly Key$, ReadOnly H$)
Declare Sub      &HCB &H04 EAXComputeCiphertext (EaxState As String, ReadOnly Key$, M$)
Declare Sub      &HCB &H05 EAXComputePlaintext (EaxState As String, ReadOnly Key$, M$)
Declare Function &HCB &H06 EAXComputeTag (EaxState As String, ReadOnly Key$) As String

#EndIf ' EaxDefIncluded
