Rem BasicCard Plug-In Library Definition File
Rem ------------------------------------------------------------------
Rem Copyright (C) 1997-1999 ZeitControl GmbH
Rem Do not edit this file. You have a royalty-free right to use, reproduce and 
Rem distribute this file in any way you find useful, provided that you agree 
Rem that ZeitControl GmbH has no warranty, obligations or liability for it.
Rem ------------------------------------------------------------------

Rem  RSA.DEF
Rem
Rem  Definition file for RSA library

#IfNotDef RsaDefIncluded ' Prevent multiple inclusion
Const RsaDefIncluded = True

#IfNotDef TerminalProgram
  #If CardMajorVersion < 7 And CardMajorVersion <> 4 Then
    #Error RSA library is not supported in this BasicCard
  #EndIf
#EndIf

Declare Function &HC4  0 RsaPseudoPrime (ReadOnly n$, ByVal nRounds%)
Declare Sub      &HC4  1 RsaGenerateKey (ByVal nBits%, ByVal eBits%, p$, q$, e$)
Declare Function &HC4  2 RsaPublicKey (ReadOnly p$, ReadOnly q$) As String
Declare Sub      &HC4  3 RsaEncrypt (Mess$, ReadOnly n$, ReadOnly e$)
Declare Sub      &HC4  4 RsaDecrypt (Mess$, ReadOnly p$, ReadOnly q$, ReadOnly e$)
Declare Sub      &HC4  5 RsaPKCS1Sign (ReadOnly Hash$, ReadOnly p$, ReadOnly q$, ReadOnly e$, Sig$)
Declare Function &HC4  6 RsaPKCS1Verify (ReadOnly Hash$, ReadOnly n$, ReadOnly e$, ReadOnly Sig$)
Declare Sub      &HC4  7 RsaPKCS1Encrypt (Mess$, ReadOnly n$, ReadOnly e$)
Declare Function &HC4  8 RsaPKCS1Decrypt (Mess$, ReadOnly p$, ReadOnly q$, ReadOnly e$)

Rem  The next two procedures are available only in the Terminal program. They are superseded by
Rem  RsaExOAEPEncrypt and RsaExOAEPDecrypt, and are included here for backwards compatibility:
Declare Sub      &HC4  9 RsaOAEPEncrypt (Mess$, ReadOnly EP$, ReadOnly n$, ReadOnly e$)
Declare Function &HC4 10 RsaOAEPDecrypt (Mess$, ReadOnly EP$, ReadOnly p$, ReadOnly q$, ReadOnly e$)

Rem Extended RSA library, for Terminal program and Professional BasicCard series 7
Declare Function &HC4 100 RsaExPseudoPrime (ReadOnly n$, nRounds%)
Declare Sub      &HC4 101 RsaExGenerateKey (ByVal nBits%, ByVal pBits%, ByVal eBits%, ReadOnly e$, PrK$)
Declare Sub      &HC4 102 RsaExPublicKey (ReadOnly PrK$, PuK$)
Declare Sub      &HC4 103 RsaExEncryptRaw (Mess$, ReadOnly PuK$)
Declare Sub      &HC4 104 RsaExDecryptRaw (Mess$, ReadOnly PrK$)
Declare Sub      &HC4 105 RsaExPKCS1Sign (ReadOnly Hash$, ReadOnly PrK$, Sig$)
Declare Function &HC4 106 RsaExPKCS1Verify (ReadOnly Hash$, ReadOnly PuK$, ReadOnly Sig$)
Declare Sub      &HC4 107 RsaExPKCS1Encrypt (Mess$, ReadOnly PuK$)
Declare Function &HC4 108 RsaExPKCS1Decrypt (Mess$, ReadOnly PrK$)
Declare Sub      &HC4 109 RsaExOAEPEncrypt (ByVal HashLen%, Mess$, ReadOnly L$, ReadOnly PuK$)
Declare Function &HC4 110 RsaExOAEPDecrypt (ByVal HashLen%, Mess$, ReadOnly L$, ReadOnly PrK$)
Declare Sub      &HC4 111 RsaExPSSSign (ReadOnly Hash$, ByVal SaltLen%, ReadOnly PrK$, Sig$)
Declare Function &HC4 112 RsaExPSSVerify (ReadOnly Hash$, ByVal SaltLen%, ReadOnly PuK$, ReadOnly Sig$)
Declare Function &HC4 120 RsaExGeneratePrime (ByVal Bytelen%, ByVal MSW%) As String
Declare Sub      &HC4 121 RsaExConstructKey (ReadOnly p$, ReadOnly q$, ReadOnly e$, PrK$)
Declare Function &HC4 130 RsaExSetFastPrKOps (On%)
Declare Function &HC4 131 RsaExGetFastPrKOps()
               
Rem  LibError codes

Const RsaBadProcParams      = &H4401
Const RsaKeyTooLong         = &H4402
Const RsaBadKey             = &H4403
Const RsaKeyTooShort        = &H4404
Const RsaFastPrKOpsDisabled = &H4405

#EndIf ' RsaDefIncluded
