Rem BasicCard Sample Source Code
Rem ------------------------------------------------------------------
Rem Copyright (C) 1997-2009 ZeitControl GmbH
Rem You have a royalty-free right to use, modify, reproduce and 
Rem distribute the Sample Application Files (and/or any modified 
Rem version) in any way you find useful, provided that you agree 
Rem that ZeitControl GmbH has no warranty, obligations or liability
Rem for any Sample Application Files.
Rem ------------------------------------------------------------------

Rem  This file contains the ATR's of all the currently available BasicCards,
Rem  defined as String constants. These constants are not expected to be useful
Rem  as they stand; they are provided rather as a helpful source of information
Rem  for people who have to define their own custom ATR's.
Rem
Rem  The ATR returned by BasicCard ZCx.y is defined as the String constant
Rem  AtrZCxy$. For BasicCards that implement T=0 protocol as well as T=1,
Rem  we also define T0AtrZCxy$, T1AtrZCxy$, and T0T1AtrZCxy$.
Rem
Rem  Thus for example the statement
Rem
Rem     #Pragma T=0,T=1
Rem
Rem  in a Professional BasicCard ZC5.5 is equivalent to the statement
Rem
Rem     Declare Binary ATR = T0T1AtrZC55$
Rem
Rem  Notes:
Rem
Rem  1. The BasicCard doesn't attempt to interpret the ATR that it sends.
Rem  So if the protocol definition bytes define a different protocol to that
Rem  used by the card, the card may become unusable as a result. You should
Rem  always test a custom ATR in a simulated BasicCard before trying it in
Rem  a real card (although this is no guarantee that the ATR will be accepted
Rem  by every card reader).
Rem
Rem  2. Cards that support multiple protocols (i.e. Professional and
Rem  MultiApplication cards) need a flag byte at the end of the ATR, to tell
Rem  them which protocols to offer (bits 0, 1) and whether to send a checksum
Rem  (bit 2).

Rem  Protocol definition bytes for Compact BasicCard ZC1.1
Const CompactProtocolBytes$ = Chr$(_
  &H3B,_ ' TS:  Direct convention
  &HEF,_ ' T0:  TB1, TC1, TD1 follow; 15 Historical Characters
  &H00,_ ' TB1: No EEPROM programming voltage required
  &HFF,_ ' TC1: Extra guard time = 11 ETU
  &H81,_ ' TD1: TD2 follows (T=1 indication)
  &H31,_ ' TD2: TA3, TB3 follow (T=1 indication)
  &H50,_ ' TA3: IFSC
  &H45)  ' TB3: BWI = 4; CWI = 5 

Rem  Protocol definition bytes for 1st generation Enhanced BasicCard versions
Const Gen1EnhancedProtocolBytes$ = Chr$(_
  &H3B,_ ' TS:  Direct convention
  &HEF,_ ' T0:  TB1, TC1, TD1 follow; 15 Historical Characters 
  &H00,_ ' TB1: No EEPROM programming voltage required
  &HFF,_ ' TC1: Extra guard time = 11 ETU
  &H81,_ ' TD1: TD2 follows (T=1 indication)
  &H31,_ ' TD2: TA3, TB3 follow (T=1 indication)
  &H20,_ ' TA3: IFSC
  &H45)  ' TB3: BWI = 4; CWI = 5 

Rem  Protocol definition bytes for 2nd generation Enhanced BasicCard versions
Const Gen2EnhancedProtocolBytes$ = Chr$(_
  &H3B,_ ' TS:  Direct convention
  &HEF,_ ' T0:  TB1, TC1, TD1 follow; 15 Historical Characters 
  &H00,_ ' TB1: No EEPROM programming voltage required
  &HFF,_ ' TC1: Extra guard time = 11 ETU
  &H81,_ ' TD1: TD2 follows (T=1 indication)
  &H31,_ ' TD2: TA3, TB3 follow (T=1 indication)
  &H20,_ ' TA3: IFSC
  &H75)  ' TB3: BWI = 7; CWI = 5 

Rem  Protocol definition bytes for 3rd generation Enhanced BasicCard versions
Const Gen3EnhancedProtocolBytes$ = Chr$(_
  &H3B,_ ' TS:  Direct convention
  &HBC,_ ' T0:  TA1, TB1, TD1 follow; 12 Historical Characters 
  &H18,_ ' TA1: FI = 1, DI = 8 (115200 baud)
  &H00,_ ' TB1: No EEPROM programming voltage required
  &H81,_ ' TD1: TD2 follows (T=1 indication)
  &H31,_ ' TD2: TA3, TB3 follow (T=1 indication)
  &H20,_ ' TA3: IFSC
  &H75)  ' TB3: BWI = 7; CWI = 5 

Rem  ATR for Compact BasicCard ZC1.1
Const AtrZC11$ = CompactProtocolBytes$ + "BasicCard ZC1.1"

Rem  ATR's for Enhanced BasicCards. Note that (for historical reasons!)
Rem  the Historical Bytes don't always match the version number of the card.

Rem  Enhanced BasicCard ZC3.1
Const AtrZC31$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC3.1"

Rem  Enhanced BasicCard ZC3.12 REV A
Const AtrZC312$ = Gen3EnhancedProtocolBytes$ + "ZC3.12 REV A"

Rem  Enhanced BasicCard ZC3.2
Const AtrZC32$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC3.2"

Rem  Enhanced BasicCard ZC3.3
Const AtrZC33$  = Gen1EnhancedProtocolBytes$ + "BasicCard ZC2.3"

Rem  Enhanced BasicCard ZC3.31
Const AtrZC331$ = Gen2EnhancedProtocolBytes$ + "BasicCardZC3.31"

Rem  Enhanced BasicCard ZC3.32 REV A
Const AtrZC332$ = Gen3EnhancedProtocolBytes$ + "ZC3.32 REV A"

Rem  Enhanced BasicCard ZC3.4
Const AtrZC34$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC2.4"

Rem  Enhanced BasicCard ZC3.42 REV A
Const AtrZC342$ = Gen3EnhancedProtocolBytes$ + "ZC3.42 REV A"

Rem  Enhanced BasicCard ZC3.5
Const AtrZC35$  = Gen1EnhancedProtocolBytes$ + "BasicCard ZC2.3"

Rem  Enhanced BasicCard ZC3.6
Const AtrZC36$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC2.4"

Rem  Enhanced BasicCard ZC3.7
Const AtrZC37$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC3.7"

Rem  Enhanced BasicCard ZC3.8
Const AtrZC38$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC3.8"

Rem  Enhanced BasicCard ZC3.9
Const AtrZC39$  = Gen2EnhancedProtocolBytes$ + "BasicCard ZC3.9"

Rem  Protocol definition bytes for Series 4 Professional BasicCard

Const Series4T0ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HFC,_ ' T0   : 12 historical chars, TABCD1 follows
  &H13,_ ' TA1  : FI = 1, DI = 3
  &H00,_ ' TB1  : No programming voltage req.
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &H40,_ ' TD1  : TC2 follows      - T=0 indication
  &H80)  ' TC2  : T=0 Work Waiting Time = 12.8 seconds

Const Series4T1ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HFC,_ ' T0   : 12 historical chars, TABCD1 follows
  &H13,_ ' TA1  : FI = 1, DI = 3
  &H00,_ ' TB1  : No programming voltage req.
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &H81,_ ' TD1  : TD2 follows      - T=1 indication
  &H31,_ ' TD2  : TA3, TB3 follows - T=1 indication
  &H80,_ ' TA3  : T=1 ICC Information Field Size
  &H75)  ' TB3  : T=1 Block Waiting Time, Character Waiting Time

Const Series4T0T1ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HFC,_ ' T0   : 12 historical chars, TABCD1 follows
  &H13,_ ' TA1  : FI = 1, DI = 3
  &H00,_ ' TB1  : No programming voltage req.
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &HC0,_ ' TD1  : TC2, TD2 follows      - T=0 indication
  &H80,_ ' TC2  : T=0 Work Waiting Time = 12.8 seconds
  &H31,_ ' TD2  : TA3, TB3 follows - T=1 indication
  &H80,_ ' TA3  : T=1 ICC Information Field Size
  &H75)  ' TB3  : T=1 Block Waiting Time, Character Waiting Time

Rem  T=0 ATR for Professional BasicCard ZC4.5A REV E
Const T0AtrZC45A$ = Series4T0ProtocolBytes$ + "ZC4.5A REV E" + Chr$(&H01)

Rem  T=1 ATR for Professional BasicCard ZC4.5A REV E
Const T1AtrZC45A$ = Series4T1ProtocolBytes$ + "ZC4.5A REV E" + Chr$(&H06)

Rem  Dual protocol ATR for Professional BasicCard ZC4.5A REV E
Const T0T1AtrZC45A$ = Series4T0T1ProtocolBytes$ + "ZC4.5A REV E" + Chr$(&H07)

Rem  Default ATR for Professional BasicCard ZC4.5A REV E is dual protocol
Const AtrZC45A$ = T0T1AtrZC45A$

Rem  T=0 ATR for Professional BasicCard ZC4.5D REV E
Const T0AtrZC45D$ = Series4T0ProtocolBytes$ + "ZC4.5D REV E" + Chr$(&H01)

Rem  T=1 ATR for Professional BasicCard ZC4.5D REV E
Const T1AtrZC45D$ = Series4T1ProtocolBytes$ + "ZC4.5D REV E" + Chr$(&H06)

Rem  Dual protocol ATR for Professional BasicCard ZC4.5D REV E
Const T0T1AtrZC45D$ = Series4T0T1ProtocolBytes$ + "ZC4.5D REV E" + Chr$(&H07)

Rem  Default ATR for Professional BasicCard ZC4.5D REV E is T=0
Const AtrZC45D$ = T0AtrZC45d$

Rem  Protocol definition bytes for Series 5 Professional BasicCard
Rem  and MultiApplication BasicCard
Rem
Rem  These differ from the Series 4 Profesional BasicCard only in the
Rem  length of the Historical Bytes (11 instead of 12)

Const Series5T0ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HFB,_ ' T0   : 11 historical chars, TABCD1 follows
  &H13,_ ' TA1  : FI = 1, DI = 3
  &H00,_ ' TB1  : No programming voltage req.
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &H40,_ ' TD1  : TC2 follows      - T=0 indication
  &H80)  ' TC2  : T=0 Work Waiting Time = 12.8 seconds

Const Series5T1ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HFB,_ ' T0   : 11 historical chars, TABCD1 follows
  &H13,_ ' TA1  : FI = 1, DI = 3
  &H00,_ ' TB1  : No programming voltage req.
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &H81,_ ' TD1  : TD2 follows      - T=1 indication
  &H31,_ ' TD2  : TA3, TB3 follows - T=1 indication
  &H80,_ ' TA3  : T=1 ICC Information Field Size
  &H75)  ' TB3  : T=1 Block Waiting Time, Character Waiting Time

Const Series5T0T1ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HFB,_ ' T0   : 11 historical chars, TABCD1 follows
  &H13,_ ' TA1  : FI = 1, DI = 3
  &H00,_ ' TB1  : No programming voltage req.
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &HC0,_ ' TD1  : TC2, TD2 follows      - T=0 indication
  &H80,_ ' TC2  : T=0 Work Waiting Time = 12.8 seconds
  &H31,_ ' TD2  : TA3, TB3 follows - T=1 indication
  &H80,_ ' TA3  : T=1 ICC Information Field Size
  &H75)  ' TB3  : T=1 Block Waiting Time, Character Waiting Time

Rem  T=0 ATR for Professional BasicCard ZC5.4 REV J
Const T0AtrZC54$ = Series5T0ProtocolBytes$ + "ZC5.4 REV J" + Chr$(&H01)

Rem  T=1 ATR for Professional BasicCard ZC5.4 REV J
Const T1AtrZC54$ = Series5T1ProtocolBytes$ + "ZC5.4 REV J" + Chr$(&H06)

Rem  Dual protocol ATR for Professional BasicCard ZC5.4 REV J
Const T0T1AtrZC54$ = Series5T0T1ProtocolBytes$ + "ZC5.4 REV J" + Chr$(&H07)

Rem  Default ATR for Professional BasicCard ZC5.4 REV J is dual protocol
Const AtrZC54$ = T0T1AtrZC54$

Rem  T=0 ATR for Professional BasicCard ZC5.5 REV K
Const T0AtrZC55$ = Series5T0ProtocolBytes$ + "ZC5.5 REV K" + Chr$(&H01)

Rem  T=1 ATR for Professional BasicCard ZC5.5 REV K
Const T1AtrZC55$ = Series5T1ProtocolBytes$ + "ZC5.5 REV K" + Chr$(&H06)

Rem  Dual protocol ATR for Professional BasicCard ZC5.5 REV K
Const T0T1AtrZC55$ = Series5T0T1ProtocolBytes$ + "ZC5.5 REV K" + Chr$(&H07)

Rem  Default ATR for Professional BasicCard ZC5.5 REV E is T=1
Const AtrZC55$ = T1AtrZC55$

Rem  T=0 ATR for Professional BasicCard ZC5.6 REV B
Const T0AtrZC56$ = Series5T0ProtocolBytes$ + "ZC5.6 REV B" + Chr$(&H01)

Rem  T=1 ATR for Professional BasicCard ZC5.6 REV B
Const T1AtrZC56$ = Series5T1ProtocolBytes$ + "ZC5.6 REV B" + Chr$(&H06)

Rem  Dual protocol ATR for Professional BasicCard ZC5.6 REV B
Const T0T1AtrZC56$ = Series5T0T1ProtocolBytes$ + "ZC5.6 REV B" + Chr$(&H07)

Rem  Default ATR for Professional BasicCard ZC5.6 REV B is T=1
Const AtrZC56$ = T1AtrZC56$

Rem  T=0 ATR for MultiApplication BasicCard ZC6.5 REV G
Const T0AtrZC65$ = Series5T0ProtocolBytes$ + "ZC6.5 REV G" + Chr$(&H01)

Rem  T=1 ATR for MultiApplication BasicCard ZC6.5 REV G
Const T1AtrZC65$ = Series5T1ProtocolBytes$ + "ZC6.5 REV G" + Chr$(&H06)

Rem  Dual protocol ATR for MultiApplication BasicCard ZC6.5 REV G
Const T0T1AtrZC65$ = Series5T0T1ProtocolBytes$ + "ZC6.5 REV G" + Chr$(&H07)

Rem  Default ATR for MultiApplication BasicCard ZC6.5 REV A is T=1
Const AtrZC65$ = T1AtrZC65$

Rem  Protocol definition bytes for Series 7 Professional BasicCard

Const Series7T0ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HDB,_ ' T0   : 11 historical chars, TACD1 follows
  &H18,_ ' TA1  : FI = 1, DI = 8
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &HC0,_ ' TD1  : TC2, TD2 follows      - T=0 indication
  &H80,_ ' TC2  : T=0 Work Waiting Time = 12.8 seconds
  &H1F,_ ' TD2  : TA3 follows - T=15 indication
  &H03)  ' TA3  : XI=0 (Clock stop not supported), UI=3 (Class A and B)

Const Series7T1ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HDB,_ ' T0   : 11 historical chars, TACD1 follows
  &H18,_ ' TA1  : FI = 1, DI = 8
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &H81,_ ' TD1  : TD2 follows      - T=1 indication
  &HB1,_ ' TD2  : TA3, TB3, TD3 follows - T=1 indication
  &HFE,_ ' TA3  : T=1 ICC Information Field Size
  &H75,_ ' TB3  : T=1 Block Waiting Time, Character Waiting Time
  &H1F,_ ' TD3  : TA4 follows - T=15 indication
  &H03)  ' TA4  : XI=0 (Clock stop not supported), UI=3 (Class A and B)

Const Series7T0T1ProtocolBytes$ = Chr$(_
  &H3B,_ ' TS   : Direct convention
  &HDB,_ ' T0   : 11 historical chars, TACD1 follows
  &H18,_ ' TA1  : FI = 1, DI = 8
  &HFF,_ ' TC1  : Waiting time between two chars=11 etu
  &HC0,_ ' TD1  : TC2, TD2 follows      - T=0 indication
  &H80,_ ' TC2  : T=0 Work Waiting Time = 12.8 seconds
  &HB1,_ ' TD2  : TA3, TB3, TD3 follows - T=1 indication
  &HFE,_ ' TA3  : T=1 ICC Information Field Size
  &H75,_ ' TB3  : T=1 Block Waiting Time, Character Waiting Time
  &H1F,_ ' TD3  : TA4 follows - T=15 indication
  &H03)  ' TA4  : XI=0 (Clock stop not supported), UI=3 (Class A and B)

Rem  T=0 ATR for Professional BasicCard ZC7.5 REV A
Const T0AtrZC75$ = Series7T0ProtocolBytes$ + "ZC7.5 REV A" + Chr$(&H01)

Rem  T=1 ATR for Professional BasicCard ZC7.5 REV A
Const T1AtrZC75$ = Series7T1ProtocolBytes$ + "ZC7.5 REV A" + Chr$(&H06)

Rem  Dual protocol ATR for Professional BasicCard ZC7.5 REV A
Const T0T1AtrZC75$ = Series7T0T1ProtocolBytes$ + "ZC7.5 REV A" + Chr$(&H07)

Rem  Default ATR for Professional BasicCard ZC7.5 REV A is dual protocol
Const AtrZC75$ = T0T1AtrZC75$

Rem  T=0 ATR for MultiApplication BasicCard ZC8.6 REV D
Const T0AtrZC86$ = Series7T0ProtocolBytes$ + "ZC8.6 REV D" + Chr$(&H01)

Rem  T=1 ATR for MultiApplication BasicCard ZC8.6 REV D
Const T1AtrZC86$ = Series7T1ProtocolBytes$ + "ZC8.6 REV D" + Chr$(&H06)

Rem  Dual protocol ATR for MultiApplication BasicCard ZC8.6 REV D
Const T0T1AtrZC86$ = Series7T0T1ProtocolBytes$ + "ZC8.6 REV D" + Chr$(&H07)

Rem  Default ATR for MultiApplication BasicCard ZC8.6 REV D is dual protocol
Const AtrZC86$ = T0T1AtrZC86$
